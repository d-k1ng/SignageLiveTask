// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignageLivePlayer.Api.Data.Db;

#nullable disable

namespace SignageLivePlayer.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("CheckInFrequency")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerUniqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = "4a8de9eb-fa69-4572-8b6f-db434dda35d7",
                            CheckInFrequency = 60,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(8194),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(8196),
                            PlayerName = "Reception Large Screen",
                            PlayerUniqueId = "RECEPT-0987",
                            SiteId = "72bc9fb6-ac2d-4747-9bc4-741633217a7b"
                        },
                        new
                        {
                            Id = "e18500c9-1a4c-4cf3-94d9-f87ff6073519",
                            CheckInFrequency = 60,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1431),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1433),
                            PlayerName = "Reception Small Screen 1",
                            PlayerUniqueId = "RECEPT-1273",
                            SiteId = "72bc9fb6-ac2d-4747-9bc4-741633217a7b"
                        },
                        new
                        {
                            Id = "5f8f5244-055e-4be3-bbe3-33c232b07ea0",
                            CheckInFrequency = 60,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1456),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1457),
                            PlayerName = "Reception Small Screen 2",
                            PlayerUniqueId = "RECEPT-1986",
                            SiteId = "72bc9fb6-ac2d-4747-9bc4-741633217a7b"
                        },
                        new
                        {
                            Id = "ed4f2224-74ce-48b9-894c-616568ed9c5b",
                            CheckInFrequency = 120,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1478),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1478),
                            PlayerName = "Sales Office",
                            PlayerUniqueId = "SALESO-5459",
                            SiteId = "72bc9fb6-ac2d-4747-9bc4-741633217a7b"
                        },
                        new
                        {
                            Id = "8a64d7e1-9c10-477b-aa83-edb1955f1702",
                            CheckInFrequency = 180,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1503),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1504),
                            PlayerName = "Marketing Office 1",
                            PlayerUniqueId = "MARKET-2278",
                            SiteId = "aa1e0f26-20e4-4a28-be6e-c84dbc2834fe"
                        },
                        new
                        {
                            Id = "9a3f4818-035b-40ce-932a-f4a4bb356f8f",
                            CheckInFrequency = 100,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1524),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1525),
                            PlayerName = "Marketing Office 2",
                            PlayerUniqueId = "MARKET-3424",
                            SiteId = "aa1e0f26-20e4-4a28-be6e-c84dbc2834fe"
                        },
                        new
                        {
                            Id = "f889af3b-9978-4375-bbd8-4e223050c59e",
                            CheckInFrequency = 30,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1549),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1550),
                            PlayerName = "Warehouse Building 1",
                            PlayerUniqueId = "WAREHO-3751",
                            SiteId = "75f2fef8-eac0-4e2b-8d6b-d761454c3630"
                        },
                        new
                        {
                            Id = "5446d3ae-df13-4a0c-9b13-6e38a6044735",
                            CheckInFrequency = 30,
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1571),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 268, DateTimeKind.Utc).AddTicks(1571),
                            PlayerName = "Warehouse Building 2",
                            PlayerUniqueId = "WAREHO-7364",
                            SiteId = "75f2fef8-eac0-4e2b-8d6b-d761454c3630"
                        });
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            RoleName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            RoleName = "SITEADMIN"
                        },
                        new
                        {
                            Id = "3",
                            RoleName = "USER"
                        });
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.Site", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteAddress1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteAddress2")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteCountry")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteCounty")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SitePostcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("SiteTown")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = "72bc9fb6-ac2d-4747-9bc4-741633217a7b",
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(2754),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(2759),
                            SiteAddress1 = "30 South Street",
                            SiteAddress2 = "",
                            SiteCountry = "",
                            SiteCounty = "",
                            SiteName = "Headquarters",
                            SitePostcode = "CB85 1RA",
                            SiteTown = "Cambridge"
                        },
                        new
                        {
                            Id = "aa1e0f26-20e4-4a28-be6e-c84dbc2834fe",
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(6114),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(6116),
                            SiteAddress1 = "58 Grove Road",
                            SiteAddress2 = "",
                            SiteCountry = "",
                            SiteCounty = "",
                            SiteName = "London Branch",
                            SitePostcode = "CB85 1RA",
                            SiteTown = "East Central London"
                        },
                        new
                        {
                            Id = "75f2fef8-eac0-4e2b-8d6b-d761454c3630",
                            DateCreated = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(6131),
                            DateModified = new DateTime(2024, 2, 25, 0, 11, 20, 267, DateTimeKind.Utc).AddTicks(6131),
                            SiteAddress1 = "54 York Road",
                            SiteAddress2 = "",
                            SiteCountry = "",
                            SiteCounty = "",
                            SiteName = "Manchester Branch",
                            SitePostcode = "M52 3RK",
                            SiteTown = "Manchester"
                        });
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "6d6a41e6-5e9a-4f43-8129-01a426944d52",
                            Email = "admin",
                            FirstName = "",
                            LastName = "",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "1",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "1",
                            RoleId = "3"
                        });
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.Player", b =>
                {
                    b.HasOne("SignageLivePlayer.Api.Data.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("SignageLivePlayer.Api.Data.Models.UserRole", b =>
                {
                    b.HasOne("SignageLivePlayer.Api.Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
